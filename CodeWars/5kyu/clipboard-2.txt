/*
    Psuedo:
    
    Notes:
    
    - we get an arr containing 3 arrays
    - el 0 are empty slots, el 1 are X and el 2 are O
    - must return -1 if match incomplete , 1 if X won, 2 if O won, 0 if draw
    
    
    Win conditions:
    - Either row/ entire sub array === 1 or 2 
    - Either column/ each elemen of same index on each sub arr have same value 
    - arr[0][0] & arr[1][1] & arr[2][2] == same value of X or O 
    - arr[0][2] & arr[1][1] & arr[2][1] == same value of X or O 
*/

function isSolved(board) {
  
  if(board.some(arr => arr.every(el => el === 1) || arr.every(el => el === 2))) {
    return board.find( arr => arr.every(el => el === 1) || arr.every(el => el === 2)).pop() 
  }
  
  if( board[0][0] === board[1][1] && board[1][1] === board[2][2] && board[0][0] === board[2][2]){
    return board[0][0]
  }
  
  if(board[0][2] === board[1][1] && board[1][1] === board[2][0] && board[0][2] === board[2][0]){ I
  return board[0][2]
  }
  
  const colCk = []

for(i=0;i<3;i++) {
 colCk.push([])
  
  for(j=0;j<3;j++){
  colCk[i].push(board[j][i])
  }
}
  
  
  if(colCk.some(arr => arr.every(el => el === 1 || el === 2))){
    
  } 
  
  
  if(board.every(arr => arr.every(el => el !== 0))) {
    return 0
  }

  
  if(board.some(arr => arr))
  return -1
}

